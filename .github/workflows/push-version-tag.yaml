name: Push docker image version tag

on:
  push:
    branches-ignore: 
      - '*'
    tags:
      - 'v*'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  push-version-tag:
    runs-on: ubuntu-22.04
    env:
      VAR_NODE_REGISTRY: ${{ vars.NODE_REGISTRY }}
      SECRET_NODE_REGISTRY_USERNAME: ${{ secrets.NODE_REGISTRY_USERNAME }}
      SECRET_NODE_REGISTRY_PASSWORD: ${{ secrets.NODE_REGISTRY_PASSWORD }}
      SECRET_CI_GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2.5.0

      - name: Get branch name and commit SHA
        id: get-branch
        uses: ./.github/actions/get-branch

      - name: Check if CI_GITHUB_TOKEN is set
        if: env.SECRET_CI_GITHUB_TOKEN == ''
        run: |
          echo "CI_GITHUB_TOKEN secret is required for this workflow to run"
          exit 1

      - name: Wait for status check on the commit
        id: waitforstatuschecks
        uses: "WyriHaximus/github-action-wait-for-status@v1.7.1"
        with:
          checkInterval: 20
        env:
          CI_GITHUB_TOKEN: "${{ secrets.CI_GITHUB_TOKEN }}"

      - name: Check if all statuses for the commit are successful
        if: steps.id.waitforstatuschecks.outputs.status != 'success'
        run: |
          echo "All statuses for commit ${{ steps.get-branch.outputs.sha_short }} must be successful"
          exit 1

      - name: Check if docker registry secrets are set
        if: env.VAR_NODE_REGISTRY == '' || env.SECRET_NODE_REGISTRY_USERNAME == '' || env.SECRET_NODE_REGISTRY_PASSWORD == ''
        run: |
          echo "docker registry secrets are required for this workflow to run"
          exit 1

      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ vars.NODE_REGISTRY }}
          username: ${{ secrets.SECRET_NODE_REGISTRY_USERNAME }}
          password: ${{ secrets.SECRET_NODE_REGISTRY_PASSWORD }}

      - name: Push docker image to the repository
        run: |
          docker pull ${{ vars.NODE_REGISTRY }}:{{ steps.get-branch.outputs.sha_short }}
          docker tag ${{ vars.NODE_REGISTRY }}:{{ steps.get-branch.outputs.sha_short }} ${{ vars.NODE_REGISTRY }}:{{ steps.get-branch.outputs.branch_name }}
          docker push ${{ vars.NODE_REGISTRY }}:{{ steps.get-branch.outputs.branch_name }}
