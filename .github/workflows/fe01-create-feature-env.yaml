name: FE01. Create feature environment

on:
  pull_request:
    types: [labeled, closed]

jobs:
  create-feature-env:
    if: github.event.action == 'labeled' && github.event.label.name == 'create-feature-env'
    runs-on: ubuntu-22.04
    env:
      VAR_NODE_REPOSITORY: ${{ vars.NODE_REPOSITORY }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2.5.0

      - name: Get branch name and commit SHA
        id: get-branch
        uses: ./.github/actions/get-branch

      - name: Check if commit status is 'success'
        shell: bash
        run: |
          curl --http1.1 -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.CI_GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/mikogs/project-template-node/commits/${{ steps.get-branch.outputs.sha_long }}/status | jq -r .state > status_output
          
          cat status_output
          cat status_output | grep 'success'

      - name: Pull the image to check if it exists
        env:
          DOCKER_IMAGE: ${{ vars.NODE_REPOSITORY }}:${{ steps.get-branch.outputs.sha_short }}
        run: |
          docker pull ${DOCKER_IMAGE}


      - name: Checkout project-template-envs repository
        uses: actions/checkout@master
        with:
          repository: mikogs/project-template-envs
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          path: "project-template-envs"
          submodules: "recursive"

      - name: Create featureenv in project-template-envs
        env:
          DOCKER_IMAGE: ${{ vars.NODE_REPOSITORY }}:${{ steps.get-branch.outputs.sha_short }}
        run: |
          cd project-template-envs
          ./create-feature-env.sh ${{ steps.get-branch.outputs.branch_name }}
          cd featureenvs/${{ steps.get-branch.outputs.branch_name }}
          kustomize edit set image "node-image-placeholder=${DOCKER_IMAGE}"
      
      - name: Commit changes to project-template-envs repository
        uses: EndBug/add-and-commit@v5.1.0
        with:
          author_name: project-template
          author_email: project-template@f0x.pl
          message: "Create featureenv ${{ steps.get-branch.outputs.branch_name }} with node docker image tag: ${{ steps.get-branch.outputs.sha_short }}"
          add: "featureenvs"
          cwd: "project-template-envs"
          branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}


      - name: Checkout project-template-apps-argocd repository
        uses: actions/checkout@master
        with:
          repository: mikogs/project-template-apps-argocd
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          path: "project-template-apps-argocd"
          submodules: "recursive"

      - name: Create featureenv in project-template-apps-argocd
        env:
          DOCKER_IMAGE: ${{ vars.NODE_REPOSITORY }}:${{ steps.get-branch.outputs.sha_short }}
        run: |
          cd project-template-apps-argocd
          ./create-feature-env.sh ${{ steps.get-branch.outputs.branch_name }}

      - name: Commit changes to project-template-apps-argocd repository
        uses: EndBug/add-and-commit@v5.1.0
        with:
          author_name: project-template
          author_email: project-template@f0x.pl
          message: "Create featureenv ${{ steps.get-branch.outputs.branch_name }} with node docker image tag: ${{ steps.get-branch.outputs.sha_short }}"
          add: "*.yaml"
          cwd: "project-template-apps-argocd"
          branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}


      - name: Checkout project-template-envs repository
        uses: actions/checkout@master
        with:
          repository: mikogs/project-template-envs
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          path: "project-template-envs"
          submodules: "recursive"

      - name: Update devenv/argocd submodule
        run: |
          cd project-template-envs
          git submodule update --remote devenv/argocd
      
      - name: Commit changes to project-template-envs repository
        uses: EndBug/add-and-commit@v5.1.0
        with:
          author_name: project-template
          author_email: project-template@f0x.pl
          message: "Create featureenv ${{ steps.get-branch.outputs.branch_name }} with node docker image tag: ${{ steps.get-branch.outputs.sha_short }}"
          add: "devenv/argocd"
          cwd: "project-template-envs"
          branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
